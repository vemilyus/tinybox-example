plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30' apply false
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.4.30' apply false

    id 'io.quarkus' version '1.11.2.Final' apply false

    id 'io.gitlab.arturbosch.detekt' version '1.16.0-RC1' apply false
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.allopen'

    apply plugin: 'io.gitlab.arturbosch.detekt'

    apply plugin: 'io.quarkus'

    sourceCompatibility = 11
    targetCompatibility = 11

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = [
                    '-Xno-param-assertions',
                    '-Xno-call-assertions'
            ]
            jvmTarget = '11'
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '11'
            javaParameters = true
        }
    }

    allOpen {
        annotation('javax.enterprise.context.ApplicationScoped')
        annotation('javax.inject.Singleton')
        annotation('javax.persistence.Entity')
        annotation('javax.ws.rs.Path')
        annotation('io.quarkus.test.junit.QuarkusTest')
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'io.quarkus:quarkus-kotlin'

        implementation 'io.quarkus:quarkus-arc'
        implementation 'io.quarkus:quarkus-kubernetes-client'
        implementation 'io.quarkus:quarkus-kubernetes-config'

        testImplementation 'io.quarkus:quarkus-junit5'
        testImplementation 'io.rest-assured:rest-assured'
        testImplementation 'com.github.tomakehurst:wiremock-jre8:2.27.2'
    }

    detekt {
        input = files('src/main/kotlin')
        config = files("$rootDir/config/detekt/detekt.yml")

        reports {
            xml {
                enabled = true
                destination = file("$buildDir/reports/detekt.xml")
            }
        }
    }

    test {
        useJUnitPlatform()
        exclude '**/Native*'
    }
}
